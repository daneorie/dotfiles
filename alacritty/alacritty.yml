# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Setup term for programs to be able to use it
env:
  TERM: alacritty

window:
  padding:
    x: 0
    y: 0

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: true

  # Startup Mode (changes require restart)
  #startup_mode: Fullscreen

  decorations: buttonless

font:
  # Normal font face - Also used to draw glyphs on tmux & VIM
  normal:
    family: BitstreamVeraSansMono Nerd Font Mono
    style: Roman

  bold:
    family: BitstreamVeraSansMono Nerd Font Mono
    style: Bold

  italic:
    family: BitstreamVeraSansMono Nerd Font Mono
    style: Oblique

  bold_italic:
    family: BitstreamVeraSansMono Nerd Font Mono
    style: Bold Oblique

  # Font size
  size: 12.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing
  # I've given in 14 spacing which fits really well with my fonts, you may change it
  # to your convenience but make sure to adjust 'glyph_offset' appropriately post that
  offset:
   x: 0
   y: 0

  # Note: This requires RESTART
  # By default when you change the offset above you'll see an issue, where the texts are bottom
  # aligned with the cursor, this is to make sure they center align.
  # This offset should usually be 1/2 of the above offset-y being set.
  glyph_offset:
   x: 0
   # Keeping this as half of offset to vertically align the text in cursor
   y: 0

  # Better font rendering for mac
  use_thin_strokes: true

selection:
  semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: true

# Live config reload (changes require restart)
live_config_reload: true

# Colors (Gruvbox dark)
colors:
  # Default colors
  primary:
    # hard contrast: background = '#1d2021'
    background: '#282828'
    # soft contrast: background = '#32302f'
    foreground: '#ebdbb2'

  # Normal colors
  normal:
    black:   '#282828'
    red:     '#cc241d'
    green:   '#98971a'
    yellow:  '#d79921'
    blue:    '#458588'
    magenta: '#b16286'
    cyan:    '#689d6a'
    white:   '#a89984'

  # Bright colors
  bright:
    black:   '#928374'
    red:     '#fb4934'
    green:   '#b8bb26'
    yellow:  '#fabd2f'
    blue:    '#83a598'
    magenta: '#d3869b'
    cyan:    '#8ec07c'
    white:   '#ebdbb2'


# Setup some amazing custom key bindings here - Best thing is you can setup key bindings
# using Mac's 'command' to control your tmux.
# A great reference: https://arslan.io/2018/02/05/gpu-accelerated-terminal-alacritty/#make-alacritty-feel-like-iterm2
# Other useful links for decoupling escape sequences, like how <C-i> and <Tab> are the same (^I).
#   https://unix.stackexchange.com/questions/631241/mapping-otherwise-conflicting-or-unmappable-keys-in-terminal-vim
#   http://www.leonerd.org.uk/hacks/fixterms/
key_bindings:
  - { key: C,        mods: Command,       action: Copy      } # 
  - { key: V,        mods: Command,       action: Paste     } # 
  - { key: Q,        mods: Command,       action: Quit      } # 
  - { key: N,        mods: Command,       command: { program: "open", args: ["-nb", "io.alacritty"] } } # Open another instance of Alacritty
  - { key: LBracket, mods: Command,       chars: "\x06\x70" } # c-f p : Use command + [ - to go to previous tmux windows
  - { key: RBracket, mods: Command,       chars: "\x06\x6e" } # c-f n : Use command + ] - to go to previous tmux panes
  - { key: Key6,     mods: Control,       chars: "\x1e"     } #       : ctrl-^ doesn't work in some terminals like alacritty
  - { key: D,        mods: Command,       chars: "\x06\x76" } # c-f v : Split pane vertically
  - { key: D,        mods: Command|Shift, chars: "\x06\x73" } # c-f s : Split pane horizontally
  - { key: W,        mods: Command,       chars: "\x06\x78" } # c-f x : Close pane; closes window if last pane
  - { key: N,        mods: Command,       chars: "\x06\x6e" } # c-f n : Select pane - Left
  - { key: E,        mods: Command,       chars: "\x06\x65" } # c-f e : Select pane - Down
  - { key: I,        mods: Command,       chars: "\x06\x69" } # c-f i : Select pane - Up
  - { key: O,        mods: Command,       chars: "\x06\x6f" } # c-f o : Select pane - Right
  - { key: T,        mods: Command,       chars: "\x06\x63" } # c-f c : Create window (tab)
  - { key: Key1,     mods: Command,       chars: "\x06\x31" } # c-f 1 : Select window 1
  - { key: Key2,     mods: Command,       chars: "\x06\x32" } # c-f 2 : Select window 2
  - { key: Key3,     mods: Command,       chars: "\x06\x33" } # c-f 3 : Select window 3
  - { key: Key4,     mods: Command,       chars: "\x06\x34" } # c-f 4 : Select window 4
  - { key: Key5,     mods: Command,       chars: "\x06\x35" } # c-f 5 : Select window 5
  - { key: Key6,     mods: Command,       chars: "\x06\x36" } # c-f 6 : Select window 6
  - { key: Key7,     mods: Command,       chars: "\x06\x37" } # c-f 7 : Select window 7
  - { key: Key8,     mods: Command,       chars: "\x06\x38" } # c-f 8 : Select window 8
  - { key: Key9,     mods: Command,       chars: "\x06\x39" } # c-f 9 : Select window 9
  - { key: Left,     mods: Command,       chars: "\x06\x4e" } # c-f N : Resize pane - Left
  - { key: Down,     mods: Command,       chars: "\x06\x45" } # c-f E : Resize pane - Down
  - { key: Right,    mods: Command,       chars: "\x06\x49" } # c-f I : Resize pane - Up
  - { key: Up,       mods: Command,       chars: "\x06\x4f" } # c-f O : Resize pane - Right
  - { key: I,        mods: Control,       chars: "\x33[105;5u" } # Map c-i to something else to differentiate it from <tab>
