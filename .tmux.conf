#~/.tmux.conf

# Unbind a few default bindings
unbind n
unbind e
unbind i
unbind o

# Set prefix key to c-f instead of default c-b
unbind C-b
set -g prefix C-f
bind C-f send-prefix

set-option -g default-shell /bin/zsh

# Toggle last window by hitting c-f again
bind-key C-f last-window

# Remap window directional navigation due to Colemak
bind-key [ previous-window
bind-key ] next-window

# Start windows and pane numbering with index 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# re-number windows when one is closed
set -g renumber-windows on

# word separators for automatic word selection
setw -g word-separators ' @"=()[]_-:,.'
setw -ag word-separators "'"

# Show times longer than supposed
set -g display-panes-time 2000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# Add true color & italics support with alacritty terminal
set -g default-terminal "alacritty"
set-option -sa terminal-overrides ",xterm*:Tc"

# Split horiziontal and vertical splits, instead of % and ". We also open them
# in the same directory.  Because we use widescreens nowadays, opening a
# vertical split that takes half of the screen is not worth. For vertical we
# only open 100 lines width, for horizontal it's 20 columns.
bind-key v split-window -h -l 100 -c '#{pane_current_path}'
bind-key s split-window -v -l 30 -c '#{pane_current_path}'

# Pressing Ctrl+Shift+Left (will move the current window to the left. Similarly
# right. No need to use the modifier (C-b).
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# reload config file
unbind r
bind-key r source-file ~/.tmux.conf  \; display ".tmux.conf reloaded!"

# Go to copy-mode
unbind Enter
bind-key Enter copy-mode

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Set keymaps for Colemak navigation.
#   Here's the circle of mappings: n -> h -> i -> k -> o -> l -> e -> j -> n
bind-key -T copy-mode-vi 'a' send-keys -X cancel
bind-key -T copy-mode-vi 'h' send-keys -X cancel
bind-key -T copy-mode-vi 'j' send-keys -X search-again
bind-key -T copy-mode-vi 'k' send-keys -X other-end
bind-key -T copy-mode-vi 'l' send-keys -X next-word-end
bind-key -T copy-mode-vi 'n' send-keys -X cursor-left
bind-key -T copy-mode-vi 'e' send-keys -X cursor-down
bind-key -T copy-mode-vi 'i' send-keys -X cursor-up
bind-key -T copy-mode-vi 'o' send-keys -X cursor-right
bind-key -T copy-mode-vi 'H' send-keys -X cancel
bind-key -T copy-mode-vi 'J' send-keys -X search-reverse
bind-key -T copy-mode-vi 'K' send-keys -X cancel
bind-key -T copy-mode-vi 'L' send-keys -X new-space-end
bind-key -T copy-mode-vi 'N' send-keys -X top-line
unbind   -T copy-mode-vi 'E'
unbind   -T copy-mode-vi 'I'
bind-key -T copy-mode-vi 'O' send-keys -X bottom-line

unbind   -T copy-mode-vi C-d
bind-key -T copy-mode-vi C-u send-keys -X half-page-down
bind-key -T copy-mode-vi C-y send-keys -X half-page-up
bind-key -T copy-mode-vi C-, send-keys -X page-down
bind-key -T copy-mode-vi C-. send-keys -X page-up

# Update default binding of `Enter` and `Space to also use copy-pipe
unbind   -T copy-mode-vi Enter
unbind   -T copy-mode-vi Space

bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

# setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection

# copy text with `y` in copy mode
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# copy text with mouse selection without pressing any key
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection

# Sync panes (Send input to all panes in the window). When enabled, pane
# borders become red as an indication.
bind C-s if -F '#{pane_synchronized}' \
               'setw synchronize-panes off; \
                setw pane-active-border-style fg=colour63,bg=default; \
                setw pane-border-format       " #P "' \
               'setw synchronize-panes on; \
                setw pane-active-border-style fg=red; \
                setw pane-border-format       " #P - Pane Synchronization ON "'

# Faster command sequence
set -s escape-time 0

# Have a very large history
set -g history-limit 1000000

# Mouse mode on
set -g mouse on

# Set title
set -g set-titles on
set -g set-titles-string "#T"

# Equally resize all panes
bind-key = select-layout even-horizontal
bind-key | select-layout even-vertical

# Disable confirm before killing
bind-key x kill-pane

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Rebind tpm install script
unbind I
bind-key H run-shell "~/.tmux/plugins/tpm/bindings/install_plugins"

# Resize panes
bind-key N resize-pane -L 10
bind-key E resize-pane -D 10
bind-key I resize-pane -U 10
bind-key O resize-pane -R 10

# Unbind arrows for pane navigation
unbind Left
unbind Down
unbind Up
unbind Right

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
set -s user-keys[0] '3[105;5u'
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
	| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'C-n' if-shell "$is_vim" { send-keys C-n } { if-shell -F '#{pane_at_left}'   {} { select-pane -L } }
bind-key -n 'C-e' if-shell "$is_vim" { send-keys C-e } { if-shell -F '#{pane_at_bottom}' {} { select-pane -D } }
bind-key -n User0 if-shell "$is_vim" { send-keys "3[105;5u" } { if-shell -F '#{pane_at_top}'    {} { select-pane -U } }
bind-key -n 'C-o' if-shell "$is_vim" { send-keys C-o } { if-shell -F '#{pane_at_right}'  {} { select-pane -R } }

bind-key -T copy-mode-vi 'C-n' if-shell -F '#{pane_at_left}'   {} { select-pane -L }
bind-key -T copy-mode-vi 'C-e' if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
bind-key -T copy-mode-vi User0 if-shell -F '#{pane_at_top}'    {} { select-pane -U }
bind-key -T copy-mode-vi 'C-o' if-shell -F '#{pane_at_right}'  {} { select-pane -R }
#bind-key -T copy-mode-vi 'C-\' select-pane -l

# Select panes 
#bind-key n select-pane -L
#bind-key e select-pane -D
#bind-key i select-pane -U
#bind-key o select-pane -R

# nvim harpoon
bind-key -r G run-shell "~/.local/share/nvim/site/pack/packer/start/harpoon/scripts/tmux/switch-back-to-nvim"

# Automatically restart Alacritty with TMUX after the computer is turn on.
#set -g @continuum-boot 'on'
#set -g @continuum-boot-options 'alacritty'

# Automatically restore the last saved environment.
#set -g @continuum-restore 'on'

# Show the status of continuum in the status bar
set -g status-right 'Continuum status: #{continuum_status}'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

source ~/.config/tmux/statusline.conf
